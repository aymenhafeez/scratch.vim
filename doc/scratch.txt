*scratch.txt*	For Vim version 7.3	    Last change: 16/06/2020

Original Author: Yegappan Lakshmanan (yegappan AT yahoo DOT com)
Forked By:       Aymen Hafeez (aymennh AT gmail DOT com)
Version:         1.1
Source:          https://github.com/aymenhafeez/scratch.vim/
==============================================================================


        scratch.vim allows the user to open a temporary scratch buffer.


This plugin allows you to open a temporary scratch buffer. When the scratch
buffer window is closed, the buffer will retain the contents. You can again
edit the scratch buffer by openeing it using one of the commands below. There
is no need to save the scatch buffer.

When you quit/exit Vim, the contents of the scratch buffer will be lost.
You will not be prompted to save the contents of the modified scratch
buffer.

You can only have one scratch buffer open in a single Vim instance. If the
current buffer has unsaved modifications, then the scratch buffer will be
opened in a new window

COMMANDS

                                                                 *:Scratch*
:Scratch                     Open/edit the scratch buffer in a new window.

                                                                *:Sscratch*
:Sscratch                    Open/edit the scratch buffer in a split window.

OPTIONS

`g:split_size`                 Set the size of the split-window created by
                             `:Sscratch`. This is set to 13 by default.

`g:split_direction`            Set the direction in which the split window is
                             opened. This is set to 'aboveleft' by default.
                             Other possible options are in line with Vim's
                             split commands: vert[ical], lefta[bove],
                             rightb[elow], to[pleft] and bo[tright].
                             Where these windows appear will be influenced by
                             the 'splitbelow' and 'splitright' options;
                             setting this to lefta[above] or rightb[elow]
                             will overrule 'splitbelow' and 'splitright'.
                                

 vim:tw=78:et:ft=help:norl:
